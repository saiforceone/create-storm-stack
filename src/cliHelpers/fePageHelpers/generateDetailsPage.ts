/**
 * @author SaiForceOne
 * @description functionality related to building details page components for the
 * frontend of a STRM Stack project
 */

// STRM Stack Imports
import FrontendOpt = STRMStackCLI.FrontendOpt;
import { LocaleManager } from '../localeManager.js';
import { getStandardImports } from './feHelperUtils.js';
import STRMController = STRMStackCLI.STRMController;

function getDetailsBuilder(
  frontendOpt: FrontendOpt,
  componentName: string,
  componentPath: string,
  controller: STRMController
): () => string {
  const localeData = LocaleManager.getInstance().getLocaleData();
  const execTime = new Date();
  const DETAIL_BUILDERS: Record<FrontendOpt, () => string> = {
    react: () => {
      return `// Generated by the ${
        localeData.misc.STORM_BRANDED
      } ${execTime.toLocaleDateString()}
// Core imports
import React from 'react';


/**
 * @function ${componentName}
 * @description Renders the page for ${componentName}
 * @constructor
 * @returns {React.ReactElement}
 */
function ${componentName}(): React.ReactElement {
  return (
    <div className="p-2">
      <h1>${componentName} Details</h1>
      <p>Autogenerated by the STðŸŒ€RM Stack</p>
      <h2 className="text-2xl font-bold font-heading">What to do next</h2>
      <ul>
        <li>edit the edit this page <b>strm_fe_${frontendOpt}/src/pages/${componentPath}.tsx</b> to match your design</li>
        <li>edit the corresponding controller file in <b>strm_controllers/${
          controller.controllerName
        }.py</b> to include
          functionality to load this resource
        </li>
      </ul>
    </div>
  );
}

export default ${componentName};
`;
    },
    lit: () => '',
    vue: () => {
      return `<script lang="ts">
// Generated by the STðŸŒ€RM Stack ${new Date().toLocaleDateString()}
// core imports
import {defineComponent} from 'vue'


export default defineComponent({
  computed: {
    /**
     * Developer Note: you should remove these computed properties since you probably won't really need them
     */
    pageTitle: () => 'STðŸŒ€RM Stack',
    techIconSize: () => 2.25,
    contactIconSize: () => 1.5,
    commonSpanStyle() {
      return "px-1 py-0.5 bg-strm-bg-dark rounded italic text-white font-bold";
    },
    commonSummaryStyle() {
      return "font-medium text-slate-600 cursor-pointer";
    },
    commonDetailStyle() {
      return "border-slate-400 border-2 rounded p-2 mb-2";
    },
    commonHeadingL3() {
      return "font-heading text-lg font-medium";
    }
    // - END of styles to be removed -
  },
  name: 'StormDetail',
});
</script>

<template>
  <div class="w-full min-h-screen flex flex-col p-2">
    <div class="min-h-full mx-auto w-full md:w-3/5 md:self-center">
      <header class="mb-4 text-center">
        <h1 class="text-4xl font-heading text-strm-bg-dark">${componentName} Page</h1>
        <p class="text-lg italic text-slate-700">Autogenerated by the STðŸŒ€RM Stack</p>
      </header>
      <div class="text-center">
        <h2 class="text-2xl font-bold font-heading">What to do next</h2>
        <p class="text-lg">Now that you have generated a new module and have this placeholder component, here are things
          you should do next</p>
      </div>
      <section class="mt-4">
        <h3 :class="commonHeadingL3">Component Details</h3>
        <div class="p-1">
          <details :class="commonDetailStyle">
            <summary :class="commonSummaryStyle">Component Details</summary>
            <div class="table w-full">
              <div class="table-header-group">
                <div class="table-row">
                  <div class="table-cell text-left">Component</div>
                  <div class="table-cell text-left">Detail</div>
                </div>
              </div>
              <div class="table-row-group">
                <div class="table-row">
                  <div class="table-cell">Module Name</div>
                  <div class="table-cell"><span :class="commonSpanStyle">${
                    componentPath.split('/')[0]
                  }</span></div>
                </div>
                <div class="table-row">
                  <div class="table-cell">API endpoint</div>
                  <div class="table-cell"><span :class="commonSpanStyle">api/${
                    controller.endpointBase
                  }</span></div>
              </div>
            </div>
            </div>
          </details>
        </div>
      </section>
      <section class="mt-4">
        <h3 :class="commonHeadingL3">Frontend</h3>
        <div class="p-1">
          <details :class="commonDetailStyle">
            <summary :class="commonSummaryStyle">Edit this component</summary>
            <p>
              <span :class="commonSpanStyle">1.</span> Edit this component's markup in <span :class="commonSpanStyle">strm_fe_vue/src/pages/${componentPath}.vue</span>
            </p>
          </details>
        </div>
      </section>
      <section class="mt-4">
        <h3 :class="commonHeadingL3">Backend</h3>
        <div class="">
          <details :class="commonDetailStyle">
            <summary :class="commonSummaryStyle">Edit the model</summary>
            <p class="text-lg"><span :class="commonSpanStyle">1.</span> Edit the corresponding model file in <span
                :class="commonSpanStyle">strm_models/${
                  controller.modelName
                }</span></p>
          </details>
        </div>
        <div class="">
          <details :class="commonDetailStyle">
            <summary :class="commonSummaryStyle">Edit the Controller</summary>
            <p><span :class="commonSpanStyle">1.</span> Edit the corresponding controller file in <span
                :class="commonSpanStyle">strm_controllers/${
                  controller.controllerName
                }.py</span></p>
            <p><span :class="commonSpanStyle">2.</span> You will want to modify the get method of the controller to
              handle retrieving by an id</p>
          </details>
        </div>
      </section>
    </div>
    <footer
      class="mt-4 p-2 text-slate-600 flex flex-col items-center absolute bottom-0 left-0 right-0"
      id="strm-footer"
    >
      <p class="text-lg">Need help or have questions?</p>
      <div class="w-full md:w-3/5 grid grid-cols-2 gap-2">
        <div>
          <a
            class="flex items-center gap-x-1"
            href="https://discord.gg/sY3a5VN3y9"
            title="Link to the Peanut Cart Express Discord"
            target="_blank"
          >
            <v-icon name="si-discord" :scale="contactIconSize"/>
            P.C.E Discord
          </a>
        </div>
        <div class="flex">
          <a
            class="flex items-center gap-x-1"
            title="Link to the STORM Stack on Github"
            href="https://github.com/saiforceone/strm-cli"
            target="_blank"
          >
            <v-icon name="si-github" :scale="contactIconSize"/>
            {{ pageTitle }} Stack Github
          </a>
        </div>
      </div>
    </footer>
  </div>
</template>

`;
    },
  };

  return DETAIL_BUILDERS[frontendOpt];
}

/**
 * @function generateDetailsPage
 * @param {FrontendOpt} frontendOpt
 * @param {string} componentName
 * @param {string} componentPath
 * @param {STRMController} controller
 * @returns {string} contents of the details page that should be written to disk
 */
function generateDetailsPage(
  frontendOpt: FrontendOpt,
  componentName: string,
  componentPath: string,
  controller: STRMController
): string {
  return getDetailsBuilder(
    frontendOpt,
    componentName,
    componentPath,
    controller
  )();
}

export default generateDetailsPage;
